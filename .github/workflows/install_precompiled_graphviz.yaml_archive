- name: Check GraphViz Version
  id: check_graphviz_version
  continue-on-error: true
  env:
    GRAPHVIZ_VERSION: ${{ inputs.graphviz_version }}
    LD_LIBRARY_PATH: /usr/lib:/usr/local/lib:/usr/local/bin/dot:/usr/bin/dot:/opt/hostedtoolcache/Python/3.12.3/x64/lib
  run: |
    if [ "$RUNNER_DEBUG" = "1" ]; then
      echo "Enabling debugging!"
      set -v # Prints shell input lines as they are read.
      set -x # Print command traces before executing command.
    fi
    cd ${{ github.workspace }}/
    curl -SL https://raw.githubusercontent.com/EnviroDIY/workflows/main/scripts/check-graphviz-version.sh -o check-graphviz-version.sh
    chmod +x check-graphviz-version.sh
    bash check-graphviz-version.sh 2>&1
    echo "${LD_LIBRARY_PATH}"
    sudo ldconfig
    echo "${LD_LIBRARY_PATH}"
    # check the install location
    type -a dot
    # test a simple command to make sure the linking works
    echo 'digraph { a -> b }' | dot -Tsvg > output.svg

- name: Install GraphViz from Deb Package
  id: install_graphviz_deb
  continue-on-error: true
  if: >-
    ${{
      ! inputs.build_graphviz &&
      (steps.check_graphviz_version.outcome != 'success' ||
        steps.check_graphviz_version.outputs.correct_graphviz != 'true')
    }}
  env:
    # see https://forum.graphviz.org/t/deb-binary-installation/2001
    LD_LIBRARY_PATH: /usr/lib:/usr/local/lib:/usr/local/bin/dot:/usr/bin/dot:/opt/hostedtoolcache/Python/3.12.3/x64/lib
  run: |
    if [ "$RUNNER_DEBUG" = "1" ]; then
      echo "Enabling debugging!"
      set -v # Prints shell input lines as they are read.
      set -x # Print command traces before executing command.
    fi
    # cd ${{ github.workspace }}/
    # sudo apt-get remove "^graphviz.*"
    # sudo apt-get remove --purge "^graphviz.*"
    cd ${{ github.workspace }}/
    curl -SL https://gitlab.com/api/v4/projects/4207231/packages/generic/graphviz-releases/${{ inputs.graphviz_version }}/ubuntu_22.04_graphviz-${{ inputs.graphviz_version }}-cmake.deb -o ubuntu_22.04_graphviz-${{ inputs.graphviz_version }}-cmake.deb
    sudo apt install -y ./ubuntu_22.04_graphviz-${{ inputs.graphviz_version }}-cmake.deb
    # check and recreate library source links
    sudo ldconfig
    # check the install location
    type -a dot
    # check the version
    sudo dot -V
    # check for linkage dependencies
    sudo ldd -v /usr/bin/dot
    # Attempt initial dot config
    sudo dot -c
    # test a simple command to make sure the linking works
    sudo echo 'digraph { a -> b }' | dot -Tsvg > output.svg
    echo 'digraph { a -> b }' | dot -Tsvg > output.svg

# Install these dependencies for building libsodium and GraphViz using awalsh128/cache-apt-pkgs-action@v1
- name: Install or Restore packages for building libsodium and GraphViz
  id: install_graphviz_build_deps
  if: >-
    ${{
      (  inputs.build_graphviz &&
        (steps.check_graphviz_version.outcome != 'success' ||
            steps.check_graphviz_version.outputs.correct_graphviz != 'true')
      ) || (steps.install_graphviz_deb.outcome != 'success' &&
              steps.install_graphviz_deb.outcome != 'skipped')
    }}
  uses: awalsh128/cache-apt-pkgs-action@v1
  with:
    packages: >
      libtool libltdl-dev automake autoconf pkg-config
      perl libperl-dev libsodium libsodium-dev argon2 libargon2-dev
    version: ${{ inputs.rebuild_cache_number }}
    debug: false
