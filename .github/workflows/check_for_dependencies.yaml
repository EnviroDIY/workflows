name: Build Examples with PlatformIO and Arduino CLI

on:
  workflow_dispatch:
  workflow_call:
    # Map the workflow outputs to job outputs
    outputs:
      has_dependencies:
        value: ${{ jobs.check_for_dependencies.outputs.has_dependencies }}
      consolidated_deps:
        value: ${{ jobs.check_for_dependencies.outputs.consolidated_deps }}
      dep_hash:
        value: ${{ jobs.check_for_dependencies.outputs.dep_hash }}

jobs:
  check_for_dependencies:
    name: Check if there are any library dependencies
    runs-on: ubuntu-latest
    outputs:
      has_dependencies: ${{ steps.check_for_deps.outputs.has_dependencies }}
      consolidated_deps: ${{ steps.check_for_deps.outputs.consolidated_deps }}
      dep_hash: ${{ steps.check_for_deps.outputs.dep_hash }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Install all the library dependencies!
      - name: Check for Dependency Files
        id: check_for_deps
        run: |
          if [ "$RUNNER_DEBUG" = "1" ]; then
            echo "Enabling debugging!"
            set -v # Prints shell input lines as they are read.
            set -x # Print command traces before executing command.
          fi
          has_dependencies=false
          cat > consolidated_deps.txt
          if [ -e continuous_integration/install-libraries-platformio.sh ]
          then
            echo "Dependency installation script fount at continuous_integration/install-libraries-platformio.sh"
            has_dependencies=true
            cat continuous_integration/install-libraries-platformio.sh >> consolidated_deps.txt
          fi
          if [ -e continuous_integration/install-libraries-arduino-cli.sh ]
          then
            echo "Dependency installation script fount at continuous_integration/install-libraries-arduino-cli.sh"
            has_dependencies=true
            cat continuous_integration/install-libraries-arduino-cli.sh >> consolidated_deps.txt
          fi
          if [ -e ./continuous_integration/dependencies.json ]
          then
            echo "Dependency installation script fount at ./continuous_integration/dependencies.json"
            has_dependencies=true
            cat ./continuous_integration/dependencies.json >> consolidated_deps.txt
          fi
          if [ -e ./examples/example_dependencies.json ]
          then
            echo "Dependency installation script fount at ./examples/example_dependencies.json"
            has_dependencies=true
            cat ./examples/example_dependencies.json >> consolidated_deps.txt
          fi
          if [ "$has_dependencies" = "false" ]; then
            echo "No dependencies found!"
          fi
          echo "has_dependencies=${has_dependencies}" >> $GITHUB_OUTPUT
          echo "consolidated_deps=$(cat consolidated_deps.txt)" >> $GITHUB_OUTPUT
          echo "dep_hash=${{ hashFiles('consolidated_deps.txt') }}" >> $GITHUB_OUTPUT
