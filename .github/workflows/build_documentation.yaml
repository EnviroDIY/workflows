name: Check for Complete Documentation

on:
  workflow_call:
    inputs:
      publish:
        description: 'Publish Documentation to GitHub Pages'
        required: true
        type: boolean
      rebuild_cache_number:
        description: 'Change this number to force a cache rebuild'
        required: true
        type: number
      doxygen_version:
        description: 'The version of Doxygen to build'
        required: false
        type: string
        default: '1.11.0'
      graphviz_version:
        description: 'The version of GraphViz to build'
        required: false
        type: string
        default: '11.0.0'
  # Also give a manual trigger
  workflow_dispatch:
    inputs:
      publish:
        description: 'Publish Documentation to GitHub Pages'
        required: true
        type: boolean
      rebuild_cache_number:
        description: 'Change this number to force a cache rebuild'
        required: true
        type: number

jobs:
  doc_build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    name: Build documentation

    steps:
      - name: Set doc root env variable
        run: |
          echo "DOC_ROOT=code_docs/${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

      - name: Print the doc root directory environment variable
        run: |
          echo "${{ env.DOC_ROOT }}"

      # check out the library repo into a subfolder
      - uses: actions/checkout@v4
        with:
          path: ${{ env.DOC_ROOT }}

      - name: Pull the requirements file
        run: |
          curl -SL https://raw.githubusercontent.com/EnviroDIY/workflows/main/scripts/doxygen_mcss_requirements.txt -o requirements.txt

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          cache: 'pip'

      - name: Install python dependencies, including PlatformIO
        run: |
          pip install --upgrade --upgrade-strategy only-if-needed -r requirements.txt

      - name: Install or Restore Tex Live
        id: install_tex_live
        uses: zauguin/install-texlive@v3
        with:
          packages: scheme-medium
          cache_version: ${{ inputs.rebuild_cache_number }}

      - name: Install or Restore basic apt-get packages
        id: install_apt_get_deps
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: >
            dia curl wget
          version: ${{ inputs.rebuild_cache_number }}
          debug: false

      - name: Parse Doxygen Versions
        id: parse_doxygen_version
        env:
          DOXYGEN_VERSION: ${{ inputs.doxygen_version }}
        run: |
          doxygen_tag=$(echo ${{ inputs.doxygen_version }} | sed "s/\./_/g")
          doxygen_tag="Release_$doxygen_tag"
          echo "Release tag for Doxgen version ${{ inputs.doxygen_version }} is ${doxygen_tag}"
          echo "doxygen_tag=${doxygen_tag}" >>$GITHUB_OUTPUT

      - name: Check Doxygen and GraphViz versions
        id: check_doxygen_version
        continue-on-error: true
        env:
          DOXYGEN_VERSION: ${{ inputs.doxygen_version }}
          GRAPHVIZ_VERSION: ${{ inputs.graphviz_version }}
        run: |
          cd ${{ github.workspace }}/
          curl -SL https://raw.githubusercontent.com/EnviroDIY/workflows/main/scripts/check-versions.sh -o check-versions.sh
          chmod +x check-versions.sh
          bash check-versions.sh 2>&1

      - name: Restore GraphViz and Doxygen
        id: restore_doxygen
        if: ${{ steps.check_doxygen_version.outcome != 'success' || steps.check_doxygen_version.outputs.correct_doxygen == 'true'}}
        uses: actions/cache/restore@v4
        with:
          path: |
            /usr/local/bin/doxygen
            /usr/bin/dot
            /usr/include
            /usr/lib
            /usr/share
            /bin/dot
          key: ${{ runner.os }}-${{ inputs.graphviz_version }}-${{ inputs.doxygen_version }}

      - name: Install GraphViz from Deb Package
        if: ${{ ! inputs.build_doxygen && (steps.check_doxygen_version.outcome != 'success' || steps.check_doxygen_version.outputs.correct_doxygen != 'true') }}
        env:
          LD_LIBRARY_PATH: /path/to/graphviz/lib /path/to/graphviz/bin/dot
        run: |
          cd ${{ github.workspace }}/
          sudo apt-get remove graphviz
          cd ${{ github.workspace }}/
          curl -SL https://gitlab.com/api/v4/projects/4207231/packages/generic/graphviz-releases/${{ inputs.graphviz_version }}/ubuntu_22.04_graphviz-${{ inputs.graphviz_version }}-cmake.deb -o ubuntu_22.04_graphviz-${{ inputs.graphviz_version }}-cmake.deb
          sudo apt install -y ./ubuntu_22.04_graphviz-${{ inputs.graphviz_version }}-cmake.deb
          env LD_LIBRARY_PATH=/usr/lib /usr/bin/dot
          dot -V
          type -a dot

      - name: Install Doxygen from Tarball
        if: ${{ ! inputs.build_doxygen && (steps.check_doxygen_version.outcome != 'success' || steps.check_doxygen_version.outputs.correct_doxygen != 'true') }}
        run: |
          cd ${{ github.workspace }}/
          sudo apt-get remove doxygen
          curl -SL https://github.com/doxygen/doxygen/releases/download/${{ steps.parse_doxygen_version.outputs.doxygen_tag }}/doxygen-${{ inputs.doxygen_version }}.linux.bin.tar.gz -o doxygen-${{ inputs.doxygen_version }}.linux.bin.tar.gz
          tar zxf doxygen-${{ inputs.doxygen_version }}.linux.bin.tar.gz
          ls
          cd doxygen-${{ inputs.doxygen_version }}/
          sudo make install
          doxygen -v
          type -a doxygen

      - name: Cache GraphViz and Doxygen
        id: cache-doxygen
        uses: actions/cache/save@v4
        with:
          path: |
            /usr/local/bin/doxygen
            /usr/bin/dot
            /usr/include
            /usr/lib
            /usr/share
            /bin/dot
          key: ${{ runner.os }}-${{ inputs.graphviz_version }}-${{ inputs.doxygen_version }}


      # check out my fork of m.css, for post-processing and re-formatting Doxygen output
      - name: Checkout m.css
        uses: actions/checkout@v4
        with:
          # Repository name with owner. For example, actions/checkout
          repository: SRGDamia1/m.css
          path: code_docs/m.css

      - name: Generate all the documentation
        id: generate_docs
        env:
          LD_LIBRARY_PATH: /path/to/graphviz/lib /path/to/graphviz/bin/dot
        run: |
          cd ${{ github.workspace }}/${{ env.DOC_ROOT }}/
          curl -SL https://raw.githubusercontent.com/EnviroDIY/workflows/main/scripts/generate-documentation.sh -o generate-documentation.sh
          chmod +x generate-documentation.sh
          bash generate-documentation.sh

      - name: Deploy to github pages
        if: inputs.publish
        uses: peaceiris/actions-gh-pages@v4.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ github.workspace }}/${{ env.DOC_ROOT }}_Doxygen/m.css
